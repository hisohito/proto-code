//
// DATA TYPES: state, bool, sting, object
//
//

interface Player {
	number take(number things);		
}

class DefaultPlayer() < Player {
	number take(number things) {
		return random things;
	}
} 

class NimGame() << Prototype {
	
	Player[] players = [new DefaultPlayer(), new DefaltPlayer()];

	number things = random 100;

	state a() {
		// "The first player won!"
		return finalize();
	}

	state b() {
		// "The second player won!"
		return finalize();
	}
	
	state finalize() {

	}

	state one() {
		return main();
	}


	state two() {
		return main();
	}
	
	
	state main() {

		while( (6 == j) or (true or false) ) {
			things = things - one();
			if (things == 0) return a(); 
			things = things - two();
			if (things == 0) return b();			
		}

	}
}

prototype NimGame() {

	finally { NimGame::a or NimGame::b};
	{not NimGame::two} until {NimGame::a}; 
}